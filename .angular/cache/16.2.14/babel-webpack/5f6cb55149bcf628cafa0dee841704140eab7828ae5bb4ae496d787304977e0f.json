{"ast":null,"code":"import { passwordMatchValidator } from 'src/app/shared/password-match.directive';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../../services/language.service\";\nexport class RegisterComponent {\n  constructor(fb, authService, messageService, router, languageService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.messageService = messageService;\n    this.router = router;\n    this.languageService = languageService;\n    this.inputError = '';\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.pattern(/^[a-zA-Z]+(?: [a-zA-Z]+)*$/)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validators: passwordMatchValidator\n    });\n  }\n  languageChangedCallback() {\n    this.inputError = this.languageService.getTranslation('Input Error');\n    console.log('Current language:', this.languageService.getLanguage());\n    console.log('Translated input error:', this.inputError);\n  }\n  getTranslation(key) {\n    return this.languageService.getTranslation(key);\n  }\n  get username() {\n    return this.registerForm.controls.username;\n  }\n  get email() {\n    return this.registerForm.controls.email;\n  }\n  get password() {\n    return this.registerForm.controls.password;\n  }\n  get confirmPassword() {\n    return this.registerForm.controls.confirmPassword;\n  }\n  submitDetails() {\n    const postData = {\n      ...this.registerForm.value\n    };\n    delete postData.confirmPassword;\n    this.authService.registerUser(postData).subscribe(response => {\n      console.log(response);\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Registered successfully'\n      });\n      this.router.navigate(['login']);\n    }, error => {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: error.error.error\n      });\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.LanguageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 0,\n    vars: 0,\n    template: function RegisterComponent_Template(rf, ctx) {},\n    styles: [\".orange-text[_ngcontent-%COMP%] {\\n  color: orange;\\n}\\n\\n.orange-form[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%], .orange-form[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n\\n  border-color: orange;\\n}\\n\\n.orange-form[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%]:focus, .orange-form[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%]:focus {\\n\\n  border-color: orange;\\n}\\n\\n.orange-button[_ngcontent-%COMP%] {\\n  background-color: orange;\\n  color: white;\\n}\\n\\n.orange-link[_ngcontent-%COMP%] {\\n  color: orange;\\n}\\n\\n.bottom-image[_ngcontent-%COMP%] {\\n  width: 80px;\\n  height: 80px;\\n  object-fit: contain;\\n  margin-bottom: -33px;\\n  margin-left: 10px;\\n  margin-top: 100px;\\n}\\n\\n.bottom-text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 16px;\\n  color: grey;\\n\\n  margin-top: 20px;\\n}\\n.bottom-image[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  object-fit: contain;\\nmargin-left: 10px;\\nmargin-top: 0px;\\nmargin-bottom: -5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBOzs7RUFHRSxvQkFBb0I7QUFDdEI7O0FBRUE7OztFQUdFLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsV0FBVzs7RUFFWCxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2YsbUJBQW1CO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLm9yYW5nZS10ZXh0IHtcclxuICBjb2xvcjogb3JhbmdlO1xyXG59XHJcblxyXG4ub3JhbmdlLWZvcm0gaW5wdXRbdHlwZT1cInRleHRcIl0sXHJcbi5vcmFuZ2UtZm9ybSBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG5cclxuICBib3JkZXItY29sb3I6IG9yYW5nZTtcclxufVxyXG5cclxuLm9yYW5nZS1mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOmZvY3VzLFxyXG4ub3JhbmdlLWZvcm0gaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdOmZvY3VzIHtcclxuXHJcbiAgYm9yZGVyLWNvbG9yOiBvcmFuZ2U7XHJcbn1cclxuXHJcbi5vcmFuZ2UtYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ub3JhbmdlLWxpbmsge1xyXG4gIGNvbG9yOiBvcmFuZ2U7XHJcbn1cclxuXHJcbi5ib3R0b20taW1hZ2Uge1xyXG4gIHdpZHRoOiA4MHB4O1xyXG4gIGhlaWdodDogODBweDtcclxuICBvYmplY3QtZml0OiBjb250YWluO1xyXG4gIG1hcmdpbi1ib3R0b206IC0zM3B4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwMHB4O1xyXG59XHJcblxyXG4uYm90dG9tLXRleHQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgY29sb3I6IGdyZXk7XHJcblxyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuLmJvdHRvbS1pbWFnZSB7XHJcbiAgd2lkdGg6IDIwcHg7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbm1hcmdpbi1sZWZ0OiAxMHB4O1xyXG5tYXJnaW4tdG9wOiAwcHg7XHJcbm1hcmdpbi1ib3R0b206IC01cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["passwordMatchValidator","Validators","RegisterComponent","constructor","fb","authService","messageService","router","languageService","inputError","registerForm","group","username","required","pattern","email","password","confirmPassword","validators","languageChangedCallback","getTranslation","console","log","getLanguage","key","controls","submitDetails","postData","value","registerUser","subscribe","response","add","severity","summary","detail","navigate","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","MessageService","i4","Router","i5","LanguageService","_2","selectors","decls","vars","template","RegisterComponent_Template","rf","ctx","styles"],"sources":["D:\\University\\SpeedWagon-frontend\\SpeedWagon\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { User } from 'src/app/interfaces/auth';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { passwordMatchValidator } from 'src/app/shared/password-match.directive';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LanguageService } from '../../services/language.service';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent {\r\ninputError: string = '';\r\n  registerForm = this.fb.group({\r\n    username: ['', [Validators.required, Validators.pattern(/^[a-zA-Z]+(?: [a-zA-Z]+)*$/)]],\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', Validators.required],\r\n    confirmPassword: ['', Validators.required]\r\n  }, {\r\n    validators: passwordMatchValidator\r\n  });\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private messageService: MessageService,\r\n    private router: Router,\r\nprivate languageService: LanguageService\r\n  ) {}\r\nlanguageChangedCallback() {\r\n  this.inputError = this.languageService.getTranslation('Input Error');\r\n  console.log('Current language:', this.languageService.getLanguage());\r\n  console.log('Translated input error:', this.inputError);\r\n}\r\ngetTranslation(key: string): string {\r\n    return this.languageService.getTranslation(key);\r\n  }\r\n  get username() {\r\n    return this.registerForm.controls.username;\r\n  }\r\n\r\n  get email() {\r\n    return this.registerForm.controls.email;\r\n  }\r\n\r\n  get password() {\r\n    return this.registerForm.controls.password;\r\n  }\r\n\r\n  get confirmPassword() {\r\n    return this.registerForm.controls.confirmPassword;\r\n  }\r\n\r\n  submitDetails() {\r\n    const postData = { ...this.registerForm.value };\r\n    delete postData.confirmPassword;\r\n\r\n    this.authService.registerUser(postData as User).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Registered successfully' });\r\n        this.router.navigate(['login']);\r\n      },\r\n      error => {\r\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: error.error.error });\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}