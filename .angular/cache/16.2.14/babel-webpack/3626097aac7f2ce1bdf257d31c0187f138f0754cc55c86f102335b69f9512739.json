{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let InputComponent = class InputComponent {\n  constructor(calcService, router, languageService) {\n    this.calcService = calcService;\n    this.router = router;\n    this.languageService = languageService;\n    this.inputValue = '';\n    this.isInputFocused = false;\n    this.inputError = '';\n  }\n  ngOnInit() {\n    this.languageService.languageChanged.subscribe(() => {\n      this.languageChangedCallback();\n    });\n  }\n  languageChangedCallback() {\n    this.inputError = '';\n  }\n  onInputFocus() {\n    this.isInputFocused = true;\n  }\n  onInputBlur() {\n    setTimeout(() => {\n      this.isInputFocused = false;\n    }, 200);\n  }\n  addCharacter(character) {\n    this.inputValue += character;\n  }\n  deleteLastCharacter() {\n    this.inputValue = this.inputValue.slice(0, -1);\n  }\n  clearInput() {\n    this.inputValue = '';\n  }\n  calculate() {\n    const userId = localStorage.getItem('userId');\n    const calcData = {\n      userId: userId,\n      expression: this.inputValue,\n      library: 'JAVA'\n    };\n    this.calcService.createCalculation(calcData).subscribe(response => {\n      this.calculationResult = response.data;\n    });\n  }\n  getTranslation(key) {\n    return this.languageService.getTranslation(key);\n  }\n};\nInputComponent = __decorate([Component({\n  selector: 'app-input',\n  templateUrl: './input-component.component.html',\n  styleUrls: ['./input-component.component.css']\n})], InputComponent);","map":{"version":3,"names":["Component","InputComponent","constructor","calcService","router","languageService","inputValue","isInputFocused","inputError","ngOnInit","languageChanged","subscribe","languageChangedCallback","onInputFocus","onInputBlur","setTimeout","addCharacter","character","deleteLastCharacter","slice","clearInput","calculate","userId","localStorage","getItem","calcData","expression","library","createCalculation","response","calculationResult","data","getTranslation","key","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\University\\QuanthinkWolfram-frontend\\QuanthinkWolfram\\src\\app\\components\\input-component\\input-component.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CalculationService } from \"../../services/calc.service\";\r\nimport { Calculation } from \"../../interfaces/calculation\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LanguageService } from '../../services/language.service';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input-component.component.html',\r\n  styleUrls: ['./input-component.component.css']\r\n})\r\nexport class InputComponent {\r\n\r\n  inputValue: string = '';\r\n  isInputFocused: boolean = false;\r\n  calculationResult: string | undefined;\r\ninputError: string = '';\r\n  constructor(\r\n    private calcService: CalculationService,\r\n    private router: Router,\r\n    private languageService: LanguageService\r\n  ) { }\r\n ngOnInit() {\r\n    this.languageService.languageChanged.subscribe(() => {\r\n      this.languageChangedCallback();\r\n    });\r\n  }\r\n\r\n  languageChangedCallback() {\r\n    this.inputError = '';\r\n  }\r\n  onInputFocus() {\r\n    this.isInputFocused = true;\r\n  }\r\n\r\n  onInputBlur() {\r\n    setTimeout(() => {\r\n      this.isInputFocused = false;\r\n    }, 200);\r\n  }\r\n\r\n  addCharacter(character: string) {\r\n    this.inputValue += character;\r\n  }\r\n\r\n  deleteLastCharacter() {\r\n    this.inputValue = this.inputValue.slice(0, -1);\r\n  }\r\n\r\n  clearInput() {\r\n    this.inputValue = '';\r\n  }\r\n\r\n  calculate() {\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    const calcData: Calculation = {\r\n      userId: userId,\r\n      expression: this.inputValue,\r\n      library: 'JAVA'\r\n    };\r\n\r\n    this.calcService.createCalculation(calcData as Calculation).subscribe(\r\n      response => {\r\n        this.calculationResult = response.data;\r\n      }\r\n    );\r\n  }\r\n\r\ngetTranslation(key: string): string {\r\n    return this.languageService.getTranslation(key);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAMzBC,YACUC,WAA+B,EAC/BC,MAAc,EACdC,eAAgC;IAFhC,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,eAAe,GAAfA,eAAe;IAPzB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,cAAc,GAAY,KAAK;IAEjC,KAAAC,UAAU,GAAW,EAAE;EAKjB;EACLC,QAAQA,CAAA;IACL,IAAI,CAACJ,eAAe,CAACK,eAAe,CAACC,SAAS,CAAC,MAAK;MAClD,IAAI,CAACC,uBAAuB,EAAE;IAChC,CAAC,CAAC;EACJ;EAEAA,uBAAuBA,CAAA;IACrB,IAAI,CAACJ,UAAU,GAAG,EAAE;EACtB;EACAK,YAAYA,CAAA;IACV,IAAI,CAACN,cAAc,GAAG,IAAI;EAC5B;EAEAO,WAAWA,CAAA;IACTC,UAAU,CAAC,MAAK;MACd,IAAI,CAACR,cAAc,GAAG,KAAK;IAC7B,CAAC,EAAE,GAAG,CAAC;EACT;EAEAS,YAAYA,CAACC,SAAiB;IAC5B,IAAI,CAACX,UAAU,IAAIW,SAAS;EAC9B;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,CAACZ,UAAU,GAAG,IAAI,CAACA,UAAU,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACd,UAAU,GAAG,EAAE;EACtB;EAEAe,SAASA,CAAA;IACP,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE7C,MAAMC,QAAQ,GAAgB;MAC5BH,MAAM,EAAEA,MAAM;MACdI,UAAU,EAAE,IAAI,CAACpB,UAAU;MAC3BqB,OAAO,EAAE;KACV;IAED,IAAI,CAACxB,WAAW,CAACyB,iBAAiB,CAACH,QAAuB,CAAC,CAACd,SAAS,CACnEkB,QAAQ,IAAG;MACT,IAAI,CAACC,iBAAiB,GAAGD,QAAQ,CAACE,IAAI;IACxC,CAAC,CACF;EACH;EAEFC,cAAcA,CAACC,GAAW;IACtB,OAAO,IAAI,CAAC5B,eAAe,CAAC2B,cAAc,CAACC,GAAG,CAAC;EACjD;CACD;AA7DYhC,cAAc,GAAAiC,UAAA,EAL1BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWpC,cAAc,CA6D1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}