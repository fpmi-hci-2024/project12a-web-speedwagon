{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nexport let HomeComponent = class HomeComponent {\n  constructor(router, languageService, authService, msgService) {\n    this.router = router;\n    this.languageService = languageService;\n    this.authService = authService;\n    this.msgService = msgService;\n    this.selectedLibrary = \"\";\n    this.showLanguageMenu = false;\n    this.showlibraryMenu = false;\n    this.showhistory = false;\n    this.languageChanged = new EventEmitter();\n    this.selectedLanguage = this.languageService.getLanguage();\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.languageSubscription = this.languageService.selectedLanguageChanged.subscribe(() => {\n      this.selectedLanguage = this.languageService.getLanguage();\n    });\n    this.selectedLibrary = \"JAVA\";\n    localStorage.setItem(\"Library\", \"JAVA\");\n  }\n  changeLanguage(language) {\n    this.languageService.setLanguage(language);\n    this.languageService.selectedLanguageChanged.next(language);\n    this.showLanguageMenu = !this.showLanguageMenu;\n  }\n  ngOnDestroy() {\n    this.languageSubscription?.unsubscribe();\n  }\n  logOut() {\n    localStorage.clear();\n    // this.authService.logout().subscribe(\n    //   response=>{\n    //     console.log(response);\n    //   }\n    // );\n    this.router.navigate(['/login']);\n  }\n  toggleLanguageMenu() {\n    this.showLanguageMenu = !this.showLanguageMenu;\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('email');\n  }\n  getTranslation(key) {\n    return this.languageService.getTranslation(key);\n  }\n  goToChat() {\n    this.router.navigate(['/chat']);\n  }\n  toggleLibraryMenu() {\n    this.showlibraryMenu = !this.showlibraryMenu;\n  }\n  changeLibrary(library) {\n    localStorage.setItem(\"Library\", library);\n    this.selectedLibrary = library;\n    this.showlibraryMenu = !this.showlibraryMenu;\n  }\n  toggleHistory() {\n    if (this.isLoggedIn()) this.showhistory = !this.showhistory;else {\n      this.msgService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'You must be an authorized user'\n      });\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":{"version":3,"names":["Component","EventEmitter","HomeComponent","constructor","router","languageService","authService","msgService","selectedLibrary","showLanguageMenu","showlibraryMenu","showhistory","languageChanged","selectedLanguage","getLanguage","ngOnInit","languageSubscription","selectedLanguageChanged","subscribe","localStorage","setItem","changeLanguage","language","setLanguage","next","ngOnDestroy","unsubscribe","logOut","clear","navigate","toggleLanguageMenu","isLoggedIn","getItem","getTranslation","key","goToChat","toggleLibraryMenu","changeLibrary","library","toggleHistory","add","severity","summary","detail","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\University\\SpeedWagon-frontend\\SpeedWagon\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\nimport {AuthService} from \"../../services/auth.service\";\r\nimport { MessageService } from 'primeng/api';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  selectedLanguage: string;\r\n  \r\n  selectedLibrary: string = \"\";\r\n  showLanguageMenu: boolean = false;\r\n  showlibraryMenu: boolean = false;\r\n  showhistory: boolean = false;\r\n  languageChanged: EventEmitter<string> = new EventEmitter<string>();\r\n  private languageSubscription: Subscription | undefined;\r\n\r\n  constructor(private router: Router, private languageService: LanguageService, private authService: AuthService, private msgService: MessageService) {\r\n    this.selectedLanguage = this.languageService.getLanguage();\r\n    this.authService = authService;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.languageSubscription = this.languageService.selectedLanguageChanged.subscribe(() => {\r\n      this.selectedLanguage = this.languageService.getLanguage();\r\n    });\r\n    this.selectedLibrary = \"JAVA\";\r\n    localStorage.setItem(\"Library\", \"JAVA\");\r\n  }\r\n\r\n  changeLanguage(language: string): void {\r\n    this.languageService.setLanguage(language);\r\n    this.languageService.selectedLanguageChanged.next(language);\r\n    this.showLanguageMenu = !this.showLanguageMenu;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.languageSubscription?.unsubscribe();\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.clear();\r\n    // this.authService.logout().subscribe(\r\n    //   response=>{\r\n    //     console.log(response);\r\n    //   }\r\n    // );\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  toggleLanguageMenu(): void {\r\n    this.showLanguageMenu = !this.showLanguageMenu;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem('email');\r\n  }\r\n\r\n  getTranslation(key: string): string {\r\n    return this.languageService.getTranslation(key);\r\n  }\r\n\r\n  goToChat(): void {\r\n    this.router.navigate(['/chat']);\r\n  }\r\n\r\n  toggleLibraryMenu(): void {\r\n      this.showlibraryMenu = !this.showlibraryMenu;\r\n  }\r\n\r\n  changeLibrary(library: string): void {\r\n    localStorage.setItem(\"Library\", library);\r\n    this.selectedLibrary = library;\r\n    this.showlibraryMenu = !this.showlibraryMenu;\r\n  }\r\n\r\n  toggleHistory(): void {\r\n    if (this.isLoggedIn())\r\n      this.showhistory = !this.showhistory;\r\n    else{\r\n      this.msgService.add({ severity: 'error', summary: 'Error', detail: 'You must be an authorized user' });\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}