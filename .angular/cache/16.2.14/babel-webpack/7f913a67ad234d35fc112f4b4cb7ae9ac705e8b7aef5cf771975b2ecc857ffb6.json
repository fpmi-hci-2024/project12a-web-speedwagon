{"ast":null,"code":"import { Observable } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CalculationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/calculations/';\n  }\n  createCalculationBasicArithmetic(calculationDetails) {\n    return this.http.post(this.apiUrl + \"basicArithmetic\", calculationDetails);\n  }\n  createCalculationEquation(calculationDetails) {\n    return this.http.post(this.apiUrl + \"equation\", calculationDetails);\n  }\n  createCalculationMatrixSub(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixSub\", calculationDetails);\n  }\n  createCalculationMatrixMul(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixMul\", calculationDetails);\n  }\n  createCalculationMatrixMulByNum(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixMulByNum\", calculationDetails);\n  }\n  createCalculationMatrixTranspose(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixTranspose\", calculationDetails);\n  }\n  createCalculationMatrixReverse(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixReverse\", calculationDetails);\n  }\n  createCalculationMatrixDeterminant(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixDeterminant\", calculationDetails);\n  }\n  createCalculationMatrixSystem(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixSystem\", calculationDetails);\n  }\n  createCalculationMatrixSum(calculationDetails) {\n    return this.http.post(this.apiUrl + \"matrixSum\", calculationDetails);\n  }\n  createCalculationHistory(userId, header) {\n    return Observable.create(observer => {\n      fetch(this.apiUrl + \"user/\" + userId, {\n        method: 'GET',\n        headers: header\n      }).then(response => response.json()).then(body => {\n        console.log(body);\n        observer.next(body);\n        /*Complete the Observable as it won't produce any more event */\n        observer.complete();\n      }).catch(err => observer.error(err));\n    });\n  }\n  static #_ = this.ɵfac = function CalculationService_Factory(t) {\n    return new (t || CalculationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CalculationService,\n    factory: CalculationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Observable","CalculationService","constructor","http","apiUrl","createCalculationBasicArithmetic","calculationDetails","post","createCalculationEquation","createCalculationMatrixSub","createCalculationMatrixMul","createCalculationMatrixMulByNum","createCalculationMatrixTranspose","createCalculationMatrixReverse","createCalculationMatrixDeterminant","createCalculationMatrixSystem","createCalculationMatrixSum","createCalculationHistory","userId","header","create","observer","fetch","method","headers","then","response","json","body","console","log","next","complete","catch","err","error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\University\\QuanthinkWolfram-frontend\\QuanthinkWolfram\\src\\app\\services\\calc.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BasicArithmetic, Equation, MatrixDeterminant, MatrixMul, MatrixMulByNum, MatrixReverse, MatrixSub, MatrixSum, MatrixSystem, MatrixTranspose } from \"src/app/interfaces/calculation\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalculationService {\r\n  private apiUrl = 'http://localhost:8080/calculations/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createCalculationBasicArithmetic(calculationDetails: BasicArithmetic): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"basicArithmetic\", calculationDetails);\r\n  }\r\n\r\n  createCalculationEquation(calculationDetails: Equation): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"equation\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixSub(calculationDetails: MatrixSub): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixSub\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixMul(calculationDetails: MatrixMul): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixMul\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixMulByNum(calculationDetails: MatrixMulByNum): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixMulByNum\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixTranspose(calculationDetails: MatrixTranspose): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixTranspose\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixReverse(calculationDetails: MatrixReverse): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixReverse\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixDeterminant(calculationDetails: MatrixDeterminant): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixDeterminant\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixSystem(calculationDetails: MatrixSystem): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixSystem\", calculationDetails);\r\n  }\r\n\r\n  createCalculationMatrixSum(calculationDetails: MatrixSum): Observable<any> {\r\n    return this.http.post(this.apiUrl + \"matrixSum\", calculationDetails);\r\n  }\r\n\r\n  createCalculationHistory(userId: number, header: Headers): Observable<any> {\r\n    return Observable.create((observer : any) => {\r\n        fetch(this.apiUrl + \"user/\" + userId, {\r\n      method: 'GET',\r\n      headers: header\r\n    }).then(response => response.json())\r\n    .then(body => {console.log(body); observer.next(body);\r\n      /*Complete the Observable as it won't produce any more event */\r\n      observer.complete();})\r\n    .catch(err => observer.error(err));\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}