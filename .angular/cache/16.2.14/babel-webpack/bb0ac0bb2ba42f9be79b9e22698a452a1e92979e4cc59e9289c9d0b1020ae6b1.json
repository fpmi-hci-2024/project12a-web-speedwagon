{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/chat.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction OnlineChatComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.sender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.timestamp);\n  }\n}\nfunction OnlineChatComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.sender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r3.timestamp);\n  }\n}\nexport class OnlineChatComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.messages = [];\n    this.newMessage = '';\n  }\n  loadMessages() {\n    this.chatService.getMessages().subscribe(messages => {\n      this.messages = messages;\n      console.log('Previous messages:', this.messages);\n    }, error => {\n      console.error('Failed to load messages:', error);\n    });\n  }\n  sendMessage(message) {\n    const newMessage = {\n      id: 0,\n      content: message,\n      timestamp: new Date().toISOString(),\n      sender: ''\n    };\n    this.chatService.sendMessage(newMessage);\n    console.log('Sent message:', newMessage);\n    this.newMessage = '';\n  }\n  ngOnInit() {\n    setTimeout(() => {\n      this.loadMessages();\n      this.subscribeToNewMessages();\n    }, 500); // Добавляем задержку в 500 миллисекунд\n  }\n\n  subscribeToNewMessages() {\n    this.chatService.receiveMessages().subscribe(message => {\n      this.messages.push(message); // Add new message received via WebSocket\n      console.log('Received message:', message);\n    }, error => {\n      console.error('Failed to receive message:', error);\n    });\n  }\n  static #_ = this.ɵfac = function OnlineChatComponent_Factory(t) {\n    return new (t || OnlineChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OnlineChatComponent,\n    selectors: [[\"app-online-chat\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"chat-container\"], [1, \"previous-messages-container\"], [\"class\", \"previous-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"messages-container\"], [\"class\", \"message\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-container\"], [\"placeholder\", \"Type a message...\", 1, \"message-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"send-button\", 3, \"click\"], [1, \"previous-message\"], [1, \"previous-message-sender\"], [1, \"previous-message-content\"], [1, \"previous-message-timestamp\"], [1, \"message\"], [1, \"message-sender\"], [1, \"message-content\"], [1, \"message-timestamp\"]],\n    template: function OnlineChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, OnlineChatComponent_div_2_Template, 7, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, OnlineChatComponent_div_4_Template, 7, 3, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function OnlineChatComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.newMessage = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function OnlineChatComponent_Template_button_click_7_listener() {\n          return ctx.sendMessage(ctx.newMessage);\n        });\n        i0.ɵɵtext(8, \"Send\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.newMessage);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i3.NgForOf, i2.NgModel],\n    styles: [\".chat-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n\\n.messages-container[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow-y: auto;\\n  padding: 10px;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\n.message-sender[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n\\n.message-content[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n}\\n\\n.message-timestamp[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  color: gray;\\n}\\n\\n.input-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  padding: 10px;\\n}\\n\\n.message-input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 5px;\\n  border: 1px solid lightgray;\\n  border-radius: 5px;\\n}\\n\\n.send-button[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n  padding: 5px 10px;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.send-button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9vbmxpbmUtY2hhdC9vbmxpbmUtY2hhdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLE9BQU87RUFDUCxZQUFZO0VBQ1osMkJBQTJCO0VBQzNCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhdC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5tZXNzYWdlcy1jb250YWluZXIge1xyXG4gIGZsZXg6IDE7XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4ubWVzc2FnZSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLm1lc3NhZ2Utc2VuZGVyIHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLm1lc3NhZ2UtY29udGVudCB7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcblxyXG4ubWVzc2FnZS10aW1lc3RhbXAge1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBjb2xvcjogZ3JheTtcclxufVxyXG5cclxuLmlucHV0LWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4ubWVzc2FnZS1pbnB1dCB7XHJcbiAgZmxleDogMTtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLnNlbmQtYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBwYWRkaW5nOiA1cHggMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnNlbmQtYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","message_r2","sender","content","timestamp","message_r3","OnlineChatComponent","constructor","chatService","messages","newMessage","loadMessages","getMessages","subscribe","console","log","error","sendMessage","message","id","Date","toISOString","ngOnInit","setTimeout","subscribeToNewMessages","receiveMessages","push","_","ɵɵdirectiveInject","i1","ChatService","_2","selectors","decls","vars","consts","template","OnlineChatComponent_Template","rf","ctx","ɵɵtemplate","OnlineChatComponent_div_2_Template","OnlineChatComponent_div_4_Template","ɵɵlistener","OnlineChatComponent_Template_input_ngModelChange_6_listener","$event","OnlineChatComponent_Template_button_click_7_listener","ɵɵproperty"],"sources":["D:\\University\\SpeedWagon-frontend\\SpeedWagon\\src\\app\\components\\online-chat\\online-chat.component.ts","D:\\University\\SpeedWagon-frontend\\SpeedWagon\\src\\app\\components\\online-chat\\online-chat.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { Message } from '../../interfaces/message';\r\n\r\n@Component({\r\nselector: 'app-online-chat',\r\ntemplateUrl: './online-chat.component.html',\r\nstyleUrls: ['./online-chat.component.css']\r\n})\r\nexport class OnlineChatComponent implements OnInit {\r\nmessages: Message[] = [];\r\nnewMessage: string = '';\r\n\r\nconstructor(private chatService: ChatService) {}\r\n\r\nloadMessages() {\r\nthis.chatService.getMessages().subscribe(\r\n(messages: Message[]) => {\r\nthis.messages = messages;\r\nconsole.log('Previous messages:', this.messages); \r\n},\r\n(error) => {\r\nconsole.error('Failed to load messages:', error);\r\n}\r\n);\r\n}\r\n\r\nsendMessage(message: string): void {\r\nconst newMessage: Message = {\r\nid: 0,\r\ncontent: message,\r\ntimestamp: new Date().toISOString(),\r\nsender: ''\r\n};\r\nthis.chatService.sendMessage(newMessage);\r\nconsole.log('Sent message:', newMessage); \r\nthis.newMessage = '';\r\n\r\n}\r\n\r\nngOnInit() {\r\n  setTimeout(() => {\r\n    this.loadMessages();\r\n\r\n    this.subscribeToNewMessages();\r\n  }, 500); // Добавляем задержку в 500 миллисекунд\r\n}\r\n\r\nsubscribeToNewMessages() {\r\nthis.chatService.receiveMessages().subscribe(\r\n(message: Message) => {\r\nthis.messages.push(message); // Add new message received via WebSocket\r\nconsole.log('Received message:', message); \r\n},\r\n(error) => {\r\nconsole.error('Failed to receive message:', error);\r\n}\r\n);\r\n}\r\n}","<div class=\"chat-container\">\r\n\r\n  <!-- Форма отображения предыдущих сообщений -->\r\n  <div class=\"previous-messages-container\">\r\n    <div *ngFor=\"let message of messages\" class=\"previous-message\">\r\n      <div class=\"previous-message-sender\">{{ message.sender }}</div>\r\n      <div class=\"previous-message-content\">{{ message.content }}</div>\r\n      <div class=\"previous-message-timestamp\">{{ message.timestamp }}</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"messages-container\">\r\n    <div *ngFor=\"let message of messages\" class=\"message\">\r\n      <div class=\"message-sender\">{{ message.sender }}</div>\r\n      <div class=\"message-content\">{{ message.content }}</div>\r\n      <div class=\"message-timestamp\">{{ message.timestamp }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"input-container\">\r\n    <input [(ngModel)]=\"newMessage\" placeholder=\"Type a message...\" class=\"message-input\">\r\n    <button (click)=\"sendMessage(newMessage)\" class=\"send-button\">Send</button>\r\n  </div>\r\n</div>"],"mappings":";;;;;;ICIIA,EAAA,CAAAC,cAAA,aAA+D;IACxBD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAC/DH,EAAA,CAAAC,cAAA,cAAsC;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACjEH,EAAA,CAAAC,cAAA,cAAwC;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAFhCH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,UAAA,CAAAC,MAAA,CAAoB;IACnBP,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAC,UAAA,CAAAE,OAAA,CAAqB;IACnBR,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAC,UAAA,CAAAG,SAAA,CAAuB;;;;;IAKjET,EAAA,CAAAC,cAAA,cAAsD;IACxBD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACtDH,EAAA,CAAAC,cAAA,cAA6B;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACxDH,EAAA,CAAAC,cAAA,cAA+B;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAFhCH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAK,UAAA,CAAAH,MAAA,CAAoB;IACnBP,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAK,UAAA,CAAAF,OAAA,CAAqB;IACnBR,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAK,UAAA,CAAAD,SAAA,CAAuB;;;ADN5D,OAAM,MAAOE,mBAAmB;EAIhCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,UAAU,GAAW,EAAE;EAEwB;EAE/CC,YAAYA,CAAA;IACZ,IAAI,CAACH,WAAW,CAACI,WAAW,EAAE,CAACC,SAAS,CACvCJ,QAAmB,IAAI;MACxB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxBK,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACN,QAAQ,CAAC;IAChD,CAAC,EACAO,KAAK,IAAI;MACVF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,CAAC,CACA;EACD;EAEAC,WAAWA,CAACC,OAAe;IAC3B,MAAMR,UAAU,GAAY;MAC5BS,EAAE,EAAE,CAAC;MACLhB,OAAO,EAAEe,OAAO;MAChBd,SAAS,EAAE,IAAIgB,IAAI,EAAE,CAACC,WAAW,EAAE;MACnCnB,MAAM,EAAE;KACP;IACD,IAAI,CAACM,WAAW,CAACS,WAAW,CAACP,UAAU,CAAC;IACxCI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,UAAU,CAAC;IACxC,IAAI,CAACA,UAAU,GAAG,EAAE;EAEpB;EAEAY,QAAQA,CAAA;IACNC,UAAU,CAAC,MAAK;MACd,IAAI,CAACZ,YAAY,EAAE;MAEnB,IAAI,CAACa,sBAAsB,EAAE;IAC/B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX;;EAEAA,sBAAsBA,CAAA;IACtB,IAAI,CAAChB,WAAW,CAACiB,eAAe,EAAE,CAACZ,SAAS,CAC3CK,OAAgB,IAAI;MACrB,IAAI,CAACT,QAAQ,CAACiB,IAAI,CAACR,OAAO,CAAC,CAAC,CAAC;MAC7BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,OAAO,CAAC;IACzC,CAAC,EACAF,KAAK,IAAI;MACVF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACA;EACD;EAAC,QAAAW,CAAA,G;qBAjDYrB,mBAAmB,EAAAX,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBzB,mBAAmB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCThC3C,EAAA,CAAAC,cAAA,aAA4B;QAIxBD,EAAA,CAAA6C,UAAA,IAAAC,kCAAA,iBAIM;QACR9C,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,aAAgC;QAC9BD,EAAA,CAAA6C,UAAA,IAAAE,kCAAA,iBAIM;QACR/C,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAA6B;QACpBD,EAAA,CAAAgD,UAAA,2BAAAC,4DAAAC,MAAA;UAAA,OAAAN,GAAA,CAAA7B,UAAA,GAAAmC,MAAA;QAAA,EAAwB;QAA/BlD,EAAA,CAAAG,YAAA,EAAsF;QACtFH,EAAA,CAAAC,cAAA,gBAA8D;QAAtDD,EAAA,CAAAgD,UAAA,mBAAAG,qDAAA;UAAA,OAASP,GAAA,CAAAtB,WAAA,CAAAsB,GAAA,CAAA7B,UAAA,CAAuB;QAAA,EAAC;QAAqBf,EAAA,CAAAE,MAAA,WAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAhBlDH,EAAA,CAAAI,SAAA,GAAW;QAAXJ,EAAA,CAAAoD,UAAA,YAAAR,GAAA,CAAA9B,QAAA,CAAW;QAQXd,EAAA,CAAAI,SAAA,GAAW;QAAXJ,EAAA,CAAAoD,UAAA,YAAAR,GAAA,CAAA9B,QAAA,CAAW;QAO7Bd,EAAA,CAAAI,SAAA,GAAwB;QAAxBJ,EAAA,CAAAoD,UAAA,YAAAR,GAAA,CAAA7B,UAAA,CAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}