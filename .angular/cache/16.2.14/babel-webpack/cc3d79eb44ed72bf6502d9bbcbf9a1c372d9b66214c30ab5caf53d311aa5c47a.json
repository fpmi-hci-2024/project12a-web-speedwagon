{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"../../services/language.service\";\nexport class LoginComponent {\n  constructor(fb, authService, router, msgService, languageService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.msgService = msgService;\n    this.languageService = languageService;\n    this.inputError = '';\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.languageService.languageChanged.subscribe(() => {\n      this.languageChangedCallback();\n    });\n    if (sessionStorage.getItem('email')) {\n      this.router.navigate(['/']);\n    }\n  }\n  languageChangedCallback() {\n    this.inputError = this.languageService.getTranslation('Input Error');\n    console.log('Current language:', this.languageService.getLanguage());\n    console.log('Translated input error:', this.inputError);\n  }\n  getTranslation(key) {\n    return this.languageService.getTranslation(key);\n  }\n  get email() {\n    return this.loginForm.controls['email'];\n  }\n  get password() {\n    return this.loginForm.controls['password'];\n  }\n  loginUser() {\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    this.authService.login({\n      email,\n      password\n    }).subscribe(response => {\n      console.log(response);\n      localStorage.setItem('userId', response.data.id);\n      localStorage.setItem('email', response.data.email);\n      localStorage.setItem('tokenType', response.data.type);\n      localStorage.setItem('token', response.data.token);\n      this.msgService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: 'Login successful'\n      });\n      this.router.navigate(['/home']);\n    }, error => {\n      this.msgService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Incorrect email or password'\n      });\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService), i0.ɵɵdirectiveInject(i5.LanguageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    hostAttrs: [1, \"orange-form\"],\n    decls: 0,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {},\n    styles: [\".field[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  color: orange;\\n}\\n\\n.field[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%], .field[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n  border-color: orange;\\n}\\n\\n.field[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%]:focus, .field[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%]:focus {\\n  border-color: orange;\\n}\\n\\nbutton[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n  background-color: orange;\\n  color: white;\\n}\\n\\n.mt-2[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: orange;\\n}\\n\\n.bottom-image[_ngcontent-%COMP%] {\\n  width: 80px;\\n  height: 80px;\\n  object-fit: contain;\\nmargin-bottom: -33px;\\nmargin-left: 10px;\\nmargin-top: 100px;\\n}\\n\\n.bottom-text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 16px;\\n  color: grey;\\nmargin-top: 50px;\\n}\\n.bottom-image[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  object-fit: contain;\\nmargin-left: 10px;\\nmargin-top: 0px;\\nmargin-bottom: -5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBOztFQUVFLG9CQUFvQjtBQUN0Qjs7QUFFQTs7RUFFRSxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7QUFDckIsb0JBQW9CO0FBQ3BCLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFdBQVc7QUFDYixnQkFBZ0I7QUFDaEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2YsbUJBQW1CO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLmZpZWxkIGxhYmVsIHtcclxuICBjb2xvcjogb3JhbmdlO1xyXG59XHJcblxyXG4uZmllbGQgaW5wdXRbdHlwZT1cInRleHRcIl0sXHJcbi5maWVsZCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xyXG4gIGJvcmRlci1jb2xvcjogb3JhbmdlO1xyXG59XHJcblxyXG4uZmllbGQgaW5wdXRbdHlwZT1cInRleHRcIl06Zm9jdXMsXHJcbi5maWVsZCBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06Zm9jdXMge1xyXG4gIGJvcmRlci1jb2xvcjogb3JhbmdlO1xyXG59XHJcblxyXG5idXR0b25bdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLm10LTIgYSB7XHJcbiAgY29sb3I6IG9yYW5nZTtcclxufVxyXG5cclxuLmJvdHRvbS1pbWFnZSB7XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XHJcbm1hcmdpbi1ib3R0b206IC0zM3B4O1xyXG5tYXJnaW4tbGVmdDogMTBweDtcclxubWFyZ2luLXRvcDogMTAwcHg7XHJcbn1cclxuXHJcbi5ib3R0b20tdGV4dCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBjb2xvcjogZ3JleTtcclxubWFyZ2luLXRvcDogNTBweDtcclxufVxyXG4uYm90dG9tLWltYWdlIHtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcclxubWFyZ2luLWxlZnQ6IDEwcHg7XHJcbm1hcmdpbi10b3A6IDBweDtcclxubWFyZ2luLWJvdHRvbTogLTVweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","fb","authService","router","msgService","languageService","inputError","loginForm","group","email","required","password","ngOnInit","languageChanged","subscribe","languageChangedCallback","sessionStorage","getItem","navigate","getTranslation","console","log","getLanguage","key","controls","loginUser","value","login","response","localStorage","setItem","data","id","type","token","add","severity","summary","detail","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","MessageService","i5","LanguageService","_2","selectors","hostAttrs","decls","vars","template","LoginComponent_Template","rf","ctx","styles"],"sources":["D:\\University\\SpeedWagon-frontend\\SpeedWagon\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  host: { class: 'orange-form' }\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\ninputError: string = '';\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private msgService: MessageService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\nthis.languageService.languageChanged.subscribe(() => {\r\n      this.languageChangedCallback();\r\n    });\r\n    if (sessionStorage.getItem('email')) {\r\n      this.router.navigate(['/']);\r\n    }\r\n}\r\n\r\nlanguageChangedCallback() {\r\n  this.inputError = this.languageService.getTranslation('Input Error');\r\n  console.log('Current language:', this.languageService.getLanguage());\r\n  console.log('Translated input error:', this.inputError);\r\n}\r\n\r\ngetTranslation(key: string): string {\r\n    return this.languageService.getTranslation(key);\r\n  }\r\n\r\n\r\n\r\n  get email() {\r\n    return this.loginForm.controls['email'];\r\n  }\r\n\r\n  get password() {\r\n    return this.loginForm.controls['password'];\r\n  }\r\n\r\n  loginUser() {\r\n    const { email, password } = this.loginForm.value;\r\n    this.authService.login({ email, password }).subscribe(\r\n      response => {\r\n        console.log(response);\r\n        localStorage.setItem('userId', response.data.id);\r\n        localStorage.setItem('email', response.data.email);\r\n        localStorage.setItem('tokenType', response.data.type);\r\n        localStorage.setItem('token', response.data.token);\r\n        this.msgService.add({ severity: 'success', summary: 'Success', detail: 'Login successful' });\r\n        this.router.navigate(['/home']);\r\n      },\r\n      error => {\r\n        this.msgService.add({ severity: 'error', summary: 'Error', detail: 'Incorrect email or password' });\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}